//
// Autogenerated by Thrift Compiler (0.16.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;
var Int64 = require('node-int64');


var ttypes = require('./baicizhan_types');
//HELPER FUNCTIONS AND STRUCTURES

var ResourceService_search_word_v2_args = function(args) {
  this.query_str = null;
  if (args) {
    if (args.query_str !== undefined && args.query_str !== null) {
      this.query_str = args.query_str;
    }
  }
};
ResourceService_search_word_v2_args.prototype = {};
ResourceService_search_word_v2_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.query_str = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ResourceService_search_word_v2_args.prototype.write = function(output) {
  output.writeStructBegin('ResourceService_search_word_v2_args');
  if (this.query_str !== null && this.query_str !== undefined) {
    output.writeFieldBegin('query_str', Thrift.Type.STRING, 1);
    output.writeString(this.query_str);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ResourceService_search_word_v2_result = function(args) {
  this.success = null;
  this.se = null;
  this.le = null;
  if (args instanceof ttypes.SystemException) {
    this.se = args;
    return;
  }
  if (args instanceof ttypes.LogicException) {
    this.le = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.SearchWordResultV2]);
    }
    if (args.se !== undefined && args.se !== null) {
      this.se = args.se;
    }
    if (args.le !== undefined && args.le !== null) {
      this.le = args.le;
    }
  }
};
ResourceService_search_word_v2_result.prototype = {};
ResourceService_search_word_v2_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp351 = input.readListBegin();
        var _size50 = _rtmp351.size || 0;
        for (var _i52 = 0; _i52 < _size50; ++_i52) {
          var elem53 = null;
          elem53 = new ttypes.SearchWordResultV2();
          elem53.read(input);
          this.success.push(elem53);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.se = new ttypes.SystemException();
        this.se.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.le = new ttypes.LogicException();
        this.le.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ResourceService_search_word_v2_result.prototype.write = function(output) {
  output.writeStructBegin('ResourceService_search_word_v2_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter54 in this.success) {
      if (this.success.hasOwnProperty(iter54)) {
        iter54 = this.success[iter54];
        iter54.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.se !== null && this.se !== undefined) {
    output.writeFieldBegin('se', Thrift.Type.STRUCT, 1);
    this.se.write(output);
    output.writeFieldEnd();
  }
  if (this.le !== null && this.le !== undefined) {
    output.writeFieldBegin('le', Thrift.Type.STRUCT, 2);
    this.le.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ResourceService_get_topic_resource_v2_args = function(args) {
  this.key = null;
  this.channel = null;
  this.with_zpk = null;
  this.with_dict = null;
  this.with_dict_wiki = null;
  this.with_media = null;
  this.with_similal_words = null;
  if (args) {
    if (args.key !== undefined && args.key !== null) {
      this.key = new ttypes.TopicKey(args.key);
    }
    if (args.channel !== undefined && args.channel !== null) {
      this.channel = args.channel;
    }
    if (args.with_zpk !== undefined && args.with_zpk !== null) {
      this.with_zpk = args.with_zpk;
    }
    if (args.with_dict !== undefined && args.with_dict !== null) {
      this.with_dict = args.with_dict;
    }
    if (args.with_dict_wiki !== undefined && args.with_dict_wiki !== null) {
      this.with_dict_wiki = args.with_dict_wiki;
    }
    if (args.with_media !== undefined && args.with_media !== null) {
      this.with_media = args.with_media;
    }
    if (args.with_similal_words !== undefined && args.with_similal_words !== null) {
      this.with_similal_words = args.with_similal_words;
    }
  }
};
ResourceService_get_topic_resource_v2_args.prototype = {};
ResourceService_get_topic_resource_v2_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.key = new ttypes.TopicKey();
        this.key.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.channel = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.with_zpk = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.BOOL) {
        this.with_dict = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.BOOL) {
        this.with_dict_wiki = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.BOOL) {
        this.with_media = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.BOOL) {
        this.with_similal_words = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ResourceService_get_topic_resource_v2_args.prototype.write = function(output) {
  output.writeStructBegin('ResourceService_get_topic_resource_v2_args');
  if (this.key !== null && this.key !== undefined) {
    output.writeFieldBegin('key', Thrift.Type.STRUCT, 1);
    this.key.write(output);
    output.writeFieldEnd();
  }
  if (this.channel !== null && this.channel !== undefined) {
    output.writeFieldBegin('channel', Thrift.Type.I32, 2);
    output.writeI32(this.channel);
    output.writeFieldEnd();
  }
  if (this.with_zpk !== null && this.with_zpk !== undefined) {
    output.writeFieldBegin('with_zpk', Thrift.Type.BOOL, 3);
    output.writeBool(this.with_zpk);
    output.writeFieldEnd();
  }
  if (this.with_dict !== null && this.with_dict !== undefined) {
    output.writeFieldBegin('with_dict', Thrift.Type.BOOL, 4);
    output.writeBool(this.with_dict);
    output.writeFieldEnd();
  }
  if (this.with_dict_wiki !== null && this.with_dict_wiki !== undefined) {
    output.writeFieldBegin('with_dict_wiki', Thrift.Type.BOOL, 5);
    output.writeBool(this.with_dict_wiki);
    output.writeFieldEnd();
  }
  if (this.with_media !== null && this.with_media !== undefined) {
    output.writeFieldBegin('with_media', Thrift.Type.BOOL, 6);
    output.writeBool(this.with_media);
    output.writeFieldEnd();
  }
  if (this.with_similal_words !== null && this.with_similal_words !== undefined) {
    output.writeFieldBegin('with_similal_words', Thrift.Type.BOOL, 7);
    output.writeBool(this.with_similal_words);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ResourceService_get_topic_resource_v2_result = function(args) {
  this.success = null;
  this.se = null;
  this.le = null;
  if (args instanceof ttypes.SystemException) {
    this.se = args;
    return;
  }
  if (args instanceof ttypes.LogicException) {
    this.le = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.TopicResourceV2(args.success);
    }
    if (args.se !== undefined && args.se !== null) {
      this.se = args.se;
    }
    if (args.le !== undefined && args.le !== null) {
      this.le = args.le;
    }
  }
};
ResourceService_get_topic_resource_v2_result.prototype = {};
ResourceService_get_topic_resource_v2_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.TopicResourceV2();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.se = new ttypes.SystemException();
        this.se.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.le = new ttypes.LogicException();
        this.le.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ResourceService_get_topic_resource_v2_result.prototype.write = function(output) {
  output.writeStructBegin('ResourceService_get_topic_resource_v2_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.se !== null && this.se !== undefined) {
    output.writeFieldBegin('se', Thrift.Type.STRUCT, 1);
    this.se.write(output);
    output.writeFieldEnd();
  }
  if (this.le !== null && this.le !== undefined) {
    output.writeFieldBegin('le', Thrift.Type.STRUCT, 2);
    this.le.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ResourceServiceClient = exports.Client = function(output, pClass) {
  this.output = output;
  this.pClass = pClass;
  this._seqid = 0;
  this._reqs = {};
};
ResourceServiceClient.prototype = {};
ResourceServiceClient.prototype.seqid = function() { return this._seqid; };
ResourceServiceClient.prototype.new_seqid = function() { return this._seqid += 1; };

ResourceServiceClient.prototype.search_word_v2 = function(query_str, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_search_word_v2(query_str);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_search_word_v2(query_str);
  }
};

ResourceServiceClient.prototype.send_search_word_v2 = function(query_str) {
  var output = new this.pClass(this.output);
  var params = {
    query_str: query_str
  };
  var args = new ResourceService_search_word_v2_args(params);
  try {
    output.writeMessageBegin('search_word_v2', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

ResourceServiceClient.prototype.recv_search_word_v2 = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ResourceService_search_word_v2_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.se) {
    return callback(result.se);
  }
  if (null !== result.le) {
    return callback(result.le);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('search_word_v2 failed: unknown result');
};

ResourceServiceClient.prototype.get_topic_resource_v2 = function(key, channel, with_zpk, with_dict, with_dict_wiki, with_media, with_similal_words, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_get_topic_resource_v2(key, channel, with_zpk, with_dict, with_dict_wiki, with_media, with_similal_words);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_get_topic_resource_v2(key, channel, with_zpk, with_dict, with_dict_wiki, with_media, with_similal_words);
  }
};

ResourceServiceClient.prototype.send_get_topic_resource_v2 = function(key, channel, with_zpk, with_dict, with_dict_wiki, with_media, with_similal_words) {
  var output = new this.pClass(this.output);
  var params = {
    key: key,
    channel: channel,
    with_zpk: with_zpk,
    with_dict: with_dict,
    with_dict_wiki: with_dict_wiki,
    with_media: with_media,
    with_similal_words: with_similal_words
  };
  var args = new ResourceService_get_topic_resource_v2_args(params);
  try {
    output.writeMessageBegin('get_topic_resource_v2', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

ResourceServiceClient.prototype.recv_get_topic_resource_v2 = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ResourceService_get_topic_resource_v2_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.se) {
    return callback(result.se);
  }
  if (null !== result.le) {
    return callback(result.le);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('get_topic_resource_v2 failed: unknown result');
};
var ResourceServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler;
};
ResourceServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
};
ResourceServiceProcessor.prototype.process_search_word_v2 = function(seqid, input, output) {
  var args = new ResourceService_search_word_v2_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.search_word_v2.length === 1) {
    Q.fcall(this._handler.search_word_v2.bind(this._handler),
      args.query_str
    ).then(function(result) {
      var result_obj = new ResourceService_search_word_v2_result({success: result});
      output.writeMessageBegin("search_word_v2", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.SystemException || err instanceof ttypes.LogicException) {
        result = new ResourceService_search_word_v2_result(err);
        output.writeMessageBegin("search_word_v2", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("search_word_v2", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.search_word_v2(args.query_str, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.SystemException || err instanceof ttypes.LogicException) {
        result_obj = new ResourceService_search_word_v2_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("search_word_v2", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("search_word_v2", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
ResourceServiceProcessor.prototype.process_get_topic_resource_v2 = function(seqid, input, output) {
  var args = new ResourceService_get_topic_resource_v2_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.get_topic_resource_v2.length === 7) {
    Q.fcall(this._handler.get_topic_resource_v2.bind(this._handler),
      args.key,
      args.channel,
      args.with_zpk,
      args.with_dict,
      args.with_dict_wiki,
      args.with_media,
      args.with_similal_words
    ).then(function(result) {
      var result_obj = new ResourceService_get_topic_resource_v2_result({success: result});
      output.writeMessageBegin("get_topic_resource_v2", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.SystemException || err instanceof ttypes.LogicException) {
        result = new ResourceService_get_topic_resource_v2_result(err);
        output.writeMessageBegin("get_topic_resource_v2", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("get_topic_resource_v2", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.get_topic_resource_v2(args.key, args.channel, args.with_zpk, args.with_dict, args.with_dict_wiki, args.with_media, args.with_similal_words, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.SystemException || err instanceof ttypes.LogicException) {
        result_obj = new ResourceService_get_topic_resource_v2_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("get_topic_resource_v2", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("get_topic_resource_v2", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
