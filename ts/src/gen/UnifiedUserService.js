//
// Autogenerated by Thrift Compiler (0.16.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;
var Int64 = require('node-int64');


var ttypes = require('./baicizhan_types');
//HELPER FUNCTIONS AND STRUCTURES

var UnifiedUserService_send_sms_verify_code_args = function(args) {
  this.phone = null;
  this.verify_type = null;
  if (args) {
    if (args.phone !== undefined && args.phone !== null) {
      this.phone = args.phone;
    }
    if (args.verify_type !== undefined && args.verify_type !== null) {
      this.verify_type = args.verify_type;
    }
  }
};
UnifiedUserService_send_sms_verify_code_args.prototype = {};
UnifiedUserService_send_sms_verify_code_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.phone = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.verify_type = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UnifiedUserService_send_sms_verify_code_args.prototype.write = function(output) {
  output.writeStructBegin('UnifiedUserService_send_sms_verify_code_args');
  if (this.phone !== null && this.phone !== undefined) {
    output.writeFieldBegin('phone', Thrift.Type.STRING, 1);
    output.writeString(this.phone);
    output.writeFieldEnd();
  }
  if (this.verify_type !== null && this.verify_type !== undefined) {
    output.writeFieldBegin('verify_type', Thrift.Type.I32, 2);
    output.writeI32(this.verify_type);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var UnifiedUserService_send_sms_verify_code_result = function(args) {
  this.se = null;
  this.le = null;
  if (args instanceof ttypes.SystemException) {
    this.se = args;
    return;
  }
  if (args instanceof ttypes.LogicException) {
    this.le = args;
    return;
  }
  if (args) {
    if (args.se !== undefined && args.se !== null) {
      this.se = args.se;
    }
    if (args.le !== undefined && args.le !== null) {
      this.le = args.le;
    }
  }
};
UnifiedUserService_send_sms_verify_code_result.prototype = {};
UnifiedUserService_send_sms_verify_code_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.se = new ttypes.SystemException();
        this.se.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.le = new ttypes.LogicException();
        this.le.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UnifiedUserService_send_sms_verify_code_result.prototype.write = function(output) {
  output.writeStructBegin('UnifiedUserService_send_sms_verify_code_result');
  if (this.se !== null && this.se !== undefined) {
    output.writeFieldBegin('se', Thrift.Type.STRUCT, 1);
    this.se.write(output);
    output.writeFieldEnd();
  }
  if (this.le !== null && this.le !== undefined) {
    output.writeFieldBegin('le', Thrift.Type.STRUCT, 2);
    this.le.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var UnifiedUserService_login_with_phone_args = function(args) {
  this.request = null;
  if (args) {
    if (args.request !== undefined && args.request !== null) {
      this.request = new ttypes.PhoneLoginRequest(args.request);
    }
  }
};
UnifiedUserService_login_with_phone_args.prototype = {};
UnifiedUserService_login_with_phone_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.request = new ttypes.PhoneLoginRequest();
        this.request.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UnifiedUserService_login_with_phone_args.prototype.write = function(output) {
  output.writeStructBegin('UnifiedUserService_login_with_phone_args');
  if (this.request !== null && this.request !== undefined) {
    output.writeFieldBegin('request', Thrift.Type.STRUCT, 1);
    this.request.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var UnifiedUserService_login_with_phone_result = function(args) {
  this.success = null;
  this.se = null;
  this.le = null;
  if (args instanceof ttypes.SystemException) {
    this.se = args;
    return;
  }
  if (args instanceof ttypes.LogicException) {
    this.le = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.UserLoginResult(args.success);
    }
    if (args.se !== undefined && args.se !== null) {
      this.se = args.se;
    }
    if (args.le !== undefined && args.le !== null) {
      this.le = args.le;
    }
  }
};
UnifiedUserService_login_with_phone_result.prototype = {};
UnifiedUserService_login_with_phone_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.UserLoginResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.se = new ttypes.SystemException();
        this.se.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.le = new ttypes.LogicException();
        this.le.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UnifiedUserService_login_with_phone_result.prototype.write = function(output) {
  output.writeStructBegin('UnifiedUserService_login_with_phone_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.se !== null && this.se !== undefined) {
    output.writeFieldBegin('se', Thrift.Type.STRUCT, 1);
    this.se.write(output);
    output.writeFieldEnd();
  }
  if (this.le !== null && this.le !== undefined) {
    output.writeFieldBegin('le', Thrift.Type.STRUCT, 2);
    this.le.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var UnifiedUserService_check_access_token_args = function(args) {
  this.device = null;
  if (args) {
    if (args.device !== undefined && args.device !== null) {
      this.device = args.device;
    }
  }
};
UnifiedUserService_check_access_token_args.prototype = {};
UnifiedUserService_check_access_token_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.device = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UnifiedUserService_check_access_token_args.prototype.write = function(output) {
  output.writeStructBegin('UnifiedUserService_check_access_token_args');
  if (this.device !== null && this.device !== undefined) {
    output.writeFieldBegin('device', Thrift.Type.STRING, 1);
    output.writeString(this.device);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var UnifiedUserService_check_access_token_result = function(args) {
  this.success = null;
  this.se = null;
  this.le = null;
  if (args instanceof ttypes.SystemException) {
    this.se = args;
    return;
  }
  if (args instanceof ttypes.LogicException) {
    this.le = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.AccessTokenCheckResult(args.success);
    }
    if (args.se !== undefined && args.se !== null) {
      this.se = args.se;
    }
    if (args.le !== undefined && args.le !== null) {
      this.le = args.le;
    }
  }
};
UnifiedUserService_check_access_token_result.prototype = {};
UnifiedUserService_check_access_token_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.AccessTokenCheckResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.se = new ttypes.SystemException();
        this.se.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.le = new ttypes.LogicException();
        this.le.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UnifiedUserService_check_access_token_result.prototype.write = function(output) {
  output.writeStructBegin('UnifiedUserService_check_access_token_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.se !== null && this.se !== undefined) {
    output.writeFieldBegin('se', Thrift.Type.STRUCT, 1);
    this.se.write(output);
    output.writeFieldEnd();
  }
  if (this.le !== null && this.le !== undefined) {
    output.writeFieldBegin('le', Thrift.Type.STRUCT, 2);
    this.le.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var UnifiedUserService_get_bind_info_args = function(args) {
};
UnifiedUserService_get_bind_info_args.prototype = {};
UnifiedUserService_get_bind_info_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UnifiedUserService_get_bind_info_args.prototype.write = function(output) {
  output.writeStructBegin('UnifiedUserService_get_bind_info_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var UnifiedUserService_get_bind_info_result = function(args) {
  this.success = null;
  this.se = null;
  this.le = null;
  if (args instanceof ttypes.SystemException) {
    this.se = args;
    return;
  }
  if (args instanceof ttypes.LogicException) {
    this.le = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.UserBindInfo]);
    }
    if (args.se !== undefined && args.se !== null) {
      this.se = args.se;
    }
    if (args.le !== undefined && args.le !== null) {
      this.le = args.le;
    }
  }
};
UnifiedUserService_get_bind_info_result.prototype = {};
UnifiedUserService_get_bind_info_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp356 = input.readListBegin();
        var _size55 = _rtmp356.size || 0;
        for (var _i57 = 0; _i57 < _size55; ++_i57) {
          var elem58 = null;
          elem58 = new ttypes.UserBindInfo();
          elem58.read(input);
          this.success.push(elem58);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.se = new ttypes.SystemException();
        this.se.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.le = new ttypes.LogicException();
        this.le.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UnifiedUserService_get_bind_info_result.prototype.write = function(output) {
  output.writeStructBegin('UnifiedUserService_get_bind_info_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter59 in this.success) {
      if (this.success.hasOwnProperty(iter59)) {
        iter59 = this.success[iter59];
        iter59.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.se !== null && this.se !== undefined) {
    output.writeFieldBegin('se', Thrift.Type.STRUCT, 1);
    this.se.write(output);
    output.writeFieldEnd();
  }
  if (this.le !== null && this.le !== undefined) {
    output.writeFieldBegin('le', Thrift.Type.STRUCT, 2);
    this.le.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var UnifiedUserServiceClient = exports.Client = function(output, pClass) {
  this.output = output;
  this.pClass = pClass;
  this._seqid = 0;
  this._reqs = {};
};
UnifiedUserServiceClient.prototype = {};
UnifiedUserServiceClient.prototype.seqid = function() { return this._seqid; };
UnifiedUserServiceClient.prototype.new_seqid = function() { return this._seqid += 1; };

UnifiedUserServiceClient.prototype.send_sms_verify_code = function(phone, verify_type, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_send_sms_verify_code(phone, verify_type);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_send_sms_verify_code(phone, verify_type);
  }
};

UnifiedUserServiceClient.prototype.send_send_sms_verify_code = function(phone, verify_type) {
  var output = new this.pClass(this.output);
  var params = {
    phone: phone,
    verify_type: verify_type
  };
  var args = new UnifiedUserService_send_sms_verify_code_args(params);
  try {
    output.writeMessageBegin('send_sms_verify_code', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

UnifiedUserServiceClient.prototype.recv_send_sms_verify_code = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new UnifiedUserService_send_sms_verify_code_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.se) {
    return callback(result.se);
  }
  if (null !== result.le) {
    return callback(result.le);
  }
  callback(null);
};

UnifiedUserServiceClient.prototype.login_with_phone = function(request, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_login_with_phone(request);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_login_with_phone(request);
  }
};

UnifiedUserServiceClient.prototype.send_login_with_phone = function(request) {
  var output = new this.pClass(this.output);
  var params = {
    request: request
  };
  var args = new UnifiedUserService_login_with_phone_args(params);
  try {
    output.writeMessageBegin('login_with_phone', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

UnifiedUserServiceClient.prototype.recv_login_with_phone = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new UnifiedUserService_login_with_phone_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.se) {
    return callback(result.se);
  }
  if (null !== result.le) {
    return callback(result.le);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('login_with_phone failed: unknown result');
};

UnifiedUserServiceClient.prototype.check_access_token = function(device, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_check_access_token(device);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_check_access_token(device);
  }
};

UnifiedUserServiceClient.prototype.send_check_access_token = function(device) {
  var output = new this.pClass(this.output);
  var params = {
    device: device
  };
  var args = new UnifiedUserService_check_access_token_args(params);
  try {
    output.writeMessageBegin('check_access_token', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

UnifiedUserServiceClient.prototype.recv_check_access_token = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new UnifiedUserService_check_access_token_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.se) {
    return callback(result.se);
  }
  if (null !== result.le) {
    return callback(result.le);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('check_access_token failed: unknown result');
};

UnifiedUserServiceClient.prototype.get_bind_info = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_get_bind_info();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_get_bind_info();
  }
};

UnifiedUserServiceClient.prototype.send_get_bind_info = function() {
  var output = new this.pClass(this.output);
  var args = new UnifiedUserService_get_bind_info_args();
  try {
    output.writeMessageBegin('get_bind_info', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

UnifiedUserServiceClient.prototype.recv_get_bind_info = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new UnifiedUserService_get_bind_info_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.se) {
    return callback(result.se);
  }
  if (null !== result.le) {
    return callback(result.le);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('get_bind_info failed: unknown result');
};
var UnifiedUserServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler;
};
UnifiedUserServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
};
UnifiedUserServiceProcessor.prototype.process_send_sms_verify_code = function(seqid, input, output) {
  var args = new UnifiedUserService_send_sms_verify_code_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.send_sms_verify_code.length === 2) {
    Q.fcall(this._handler.send_sms_verify_code.bind(this._handler),
      args.phone,
      args.verify_type
    ).then(function(result) {
      var result_obj = new UnifiedUserService_send_sms_verify_code_result({success: result});
      output.writeMessageBegin("send_sms_verify_code", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.SystemException || err instanceof ttypes.LogicException) {
        result = new UnifiedUserService_send_sms_verify_code_result(err);
        output.writeMessageBegin("send_sms_verify_code", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("send_sms_verify_code", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.send_sms_verify_code(args.phone, args.verify_type, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.SystemException || err instanceof ttypes.LogicException) {
        result_obj = new UnifiedUserService_send_sms_verify_code_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("send_sms_verify_code", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("send_sms_verify_code", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
UnifiedUserServiceProcessor.prototype.process_login_with_phone = function(seqid, input, output) {
  var args = new UnifiedUserService_login_with_phone_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.login_with_phone.length === 1) {
    Q.fcall(this._handler.login_with_phone.bind(this._handler),
      args.request
    ).then(function(result) {
      var result_obj = new UnifiedUserService_login_with_phone_result({success: result});
      output.writeMessageBegin("login_with_phone", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.SystemException || err instanceof ttypes.LogicException) {
        result = new UnifiedUserService_login_with_phone_result(err);
        output.writeMessageBegin("login_with_phone", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("login_with_phone", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.login_with_phone(args.request, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.SystemException || err instanceof ttypes.LogicException) {
        result_obj = new UnifiedUserService_login_with_phone_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("login_with_phone", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("login_with_phone", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
UnifiedUserServiceProcessor.prototype.process_check_access_token = function(seqid, input, output) {
  var args = new UnifiedUserService_check_access_token_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.check_access_token.length === 1) {
    Q.fcall(this._handler.check_access_token.bind(this._handler),
      args.device
    ).then(function(result) {
      var result_obj = new UnifiedUserService_check_access_token_result({success: result});
      output.writeMessageBegin("check_access_token", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.SystemException || err instanceof ttypes.LogicException) {
        result = new UnifiedUserService_check_access_token_result(err);
        output.writeMessageBegin("check_access_token", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("check_access_token", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.check_access_token(args.device, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.SystemException || err instanceof ttypes.LogicException) {
        result_obj = new UnifiedUserService_check_access_token_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("check_access_token", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("check_access_token", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
UnifiedUserServiceProcessor.prototype.process_get_bind_info = function(seqid, input, output) {
  var args = new UnifiedUserService_get_bind_info_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.get_bind_info.length === 0) {
    Q.fcall(this._handler.get_bind_info.bind(this._handler)
    ).then(function(result) {
      var result_obj = new UnifiedUserService_get_bind_info_result({success: result});
      output.writeMessageBegin("get_bind_info", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.SystemException || err instanceof ttypes.LogicException) {
        result = new UnifiedUserService_get_bind_info_result(err);
        output.writeMessageBegin("get_bind_info", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("get_bind_info", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.get_bind_info(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.SystemException || err instanceof ttypes.LogicException) {
        result_obj = new UnifiedUserService_get_bind_info_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("get_bind_info", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("get_bind_info", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
